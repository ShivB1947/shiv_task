{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Downloads\\\\Elevator-Task-main\\\\Elevator-Task-main\\\\react_frontend\\\\src\\\\FloorView\\\\FloorView.jsx\",\n  _s = $RefreshSig$();\nimport { Box } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport ControlPanel from \"./ControlPanel/ControlPanel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FloorView(props) {\n  _s();\n  const [controlPanels, setControlPanels] = useState([]);\n  useEffect(() => {\n    if (props.selectedFloor) {\n      fetch(\"http://127.0.0.1:8000/elevator-control/floor/\" + props.selectedFloor.value + \"/control-panels/\").then(response => response.json()).then(data => setControlPanels(data['control_panels'])).catch(error => console.error(\"Error:\", error));\n    }\n  }, [props.selectedFloor]); // re-run the effect if props.selectedFloor changes\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    children: controlPanels.map(controlPanel => /*#__PURE__*/_jsxDEV(ControlPanel, {\n      id: controlPanel.id,\n      floorLocation: props.selectedFloor.label\n    }, controlPanel.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n_s(FloorView, \"AlKXIkkzioLB+rJGWvmZW9t31bk=\");\n_c = FloorView;\nexport default FloorView;\nvar _c;\n$RefreshReg$(_c, \"FloorView\");","map":{"version":3,"names":["Box","useEffect","useState","ControlPanel","jsxDEV","_jsxDEV","FloorView","props","_s","controlPanels","setControlPanels","selectedFloor","fetch","value","then","response","json","data","catch","error","console","sx","display","flexWrap","children","map","controlPanel","id","floorLocation","label","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/admin/Downloads/Elevator-Task-main/Elevator-Task-main/react_frontend/src/FloorView/FloorView.jsx"],"sourcesContent":["import {Box} from \"@mui/material\";\nimport {useEffect, useState} from \"react\";\nimport ControlPanel from \"./ControlPanel/ControlPanel\";\n\nfunction FloorView(props) {\n\n    const [controlPanels, setControlPanels] = useState([]);\n\n    useEffect(() => {\n        if (props.selectedFloor) {\n            fetch(\"http://127.0.0.1:8000/elevator-control/floor/\" + props.selectedFloor.value + \"/control-panels/\")\n                .then((response) => response.json())\n                .then((data) => setControlPanels(data['control_panels']))\n                .catch((error) => console.error(\"Error:\", error));\n        }\n\n    }, [props.selectedFloor]); // re-run the effect if props.selectedFloor changes\n\n    return (\n        <Box sx={{display: 'flex', flexWrap: 'wrap'}}>\n            {controlPanels.map((controlPanel) => (\n                <ControlPanel key={controlPanel.id} id={controlPanel.id} floorLocation={props.selectedFloor.label}/>\n            ))}\n        </Box>\n    );\n\n}\n\nexport default FloorView;\n"],"mappings":";;AAAA,SAAQA,GAAG,QAAO,eAAe;AACjC,SAAQC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACzC,OAAOC,YAAY,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,SAASC,SAASA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAEtB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtDD,SAAS,CAAC,MAAM;IACZ,IAAIM,KAAK,CAACI,aAAa,EAAE;MACrBC,KAAK,CAAC,+CAA+C,GAAGL,KAAK,CAACI,aAAa,CAACE,KAAK,GAAG,kBAAkB,CAAC,CAClGC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKP,gBAAgB,CAACO,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CACxDC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC,CAAC;IACzD;EAEJ,CAAC,EAAE,CAACZ,KAAK,CAACI,aAAa,CAAC,CAAC,CAAC,CAAC;;EAE3B,oBACIN,OAAA,CAACL,GAAG;IAACqB,EAAE,EAAE;MAACC,OAAO,EAAE,MAAM;MAAEC,QAAQ,EAAE;IAAM,CAAE;IAAAC,QAAA,EACxCf,aAAa,CAACgB,GAAG,CAAEC,YAAY,iBAC5BrB,OAAA,CAACF,YAAY;MAAuBwB,EAAE,EAAED,YAAY,CAACC,EAAG;MAACC,aAAa,EAAErB,KAAK,CAACI,aAAa,CAACkB;IAAM,GAA/EH,YAAY,CAACC,EAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAiE,CACtG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAGd;AAACzB,EAAA,CAtBQF,SAAS;AAAA4B,EAAA,GAAT5B,SAAS;AAwBlB,eAAeA,SAAS;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}