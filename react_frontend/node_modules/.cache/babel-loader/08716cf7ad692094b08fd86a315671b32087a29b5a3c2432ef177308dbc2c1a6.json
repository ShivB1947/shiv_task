{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Downloads\\\\Elevator-Task-main\\\\Elevator-Task-main\\\\react_frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport FloorView from \"./FloorView/FloorView\";\nimport ElevatorInfoDisplay from \"./ElevatorInfoDisplay/ElevatorInfoDisplay\";\nimport Select from \"react-select\";\nimport { Box, Link } from \"@mui/material\";\nimport { ElevatorInfoContext } from \"./Context/ElevatorInfoContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst selectStyles = {\n  control: provided => ({\n    ...provided,\n    width: 300,\n    fontSize: \"2em\",\n    marginLeft: \"30px\",\n    marginTop: \"10px\",\n    textAlign: \"center\"\n  }),\n  singleValue: provided => ({\n    ...provided,\n    fontSize: \"30px\"\n  }),\n  option: provided => ({\n    ...provided,\n    fontSize: \"20px\"\n  }),\n  placeholder: provided => ({\n    ...provided,\n    fontSize: \"30px\"\n  }),\n  menu: provided => ({\n    ...provided,\n    width: 300,\n    marginLeft: \"20px\",\n    zIndex: '1000'\n  })\n};\nfunction App() {\n  _s();\n  const [elevatorInfo, setElevatorInfo] = useState([]);\n  const [floorOptions, setFloorOptions] = useState([]);\n  const [selectedFloor, setSelectedFloor] = useState(null);\n  const handleReceivedFloors = messageEvent => {\n    const floors = messageEvent[\"floors\"];\n    setFloorOptions(floors.map(floor => {\n      return {\n        value: floor.id,\n        label: floor.number\n      };\n    }));\n  };\n  const handleElevatorInfo = messageEvent => {\n    setElevatorInfo(messageEvent['elevator_info']);\n  };\n  useEffect(() => {\n    // First get all floors\n    fetch(\"http://localhost:8000/elevator-control/get-all-floors/\").then(response => response.json()).then(data => handleReceivedFloors(data)).catch(error => console.error(\"Error:\", error));\n\n    // Then get elevator info\n    fetch(\"http://localhost:8000/elevator-control/get-all-elevator-info/\").then(response => response.json()).then(data => handleElevatorInfo(data)).catch(error => console.error(\"Error:\", error));\n  }, []); // Only run once\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: \"flex\",\n        flexDirection: \"row\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Select, {\n        placeholder: \"Select a floor\",\n        value: selectedFloor,\n        onChange: setSelectedFloor,\n        options: floorOptions,\n        styles: selectStyles\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          marginLeft: \"30px\",\n          marginTop: \"25px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          href: \"http://127.0.0.1:8000/admin\",\n          style: {\n            textDecoration: \"none\",\n            fontSize: \"20px\",\n            color: \"blue\",\n            cursor: \"pointer\"\n          },\n          children: \"Click here to go to the config page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ElevatorInfoDisplay, {\n      elevatorInfo: elevatorInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ElevatorInfoContext.Provider, {\n      value: {\n        setElevatorInfo\n      },\n      children: selectedFloor ? /*#__PURE__*/_jsxDEV(FloorView, {\n        selectedFloor: selectedFloor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          marginLeft: \"30px\",\n          marginTop: '40px'\n        },\n        children: \"Select a floor to view its control panels\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"xD8bX0W8Hho080pEHFDjU9dn8Mg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","FloorView","ElevatorInfoDisplay","Select","Box","Link","ElevatorInfoContext","jsxDEV","_jsxDEV","Fragment","_Fragment","selectStyles","control","provided","width","fontSize","marginLeft","marginTop","textAlign","singleValue","option","placeholder","menu","zIndex","App","_s","elevatorInfo","setElevatorInfo","floorOptions","setFloorOptions","selectedFloor","setSelectedFloor","handleReceivedFloors","messageEvent","floors","map","floor","value","id","label","number","handleElevatorInfo","fetch","then","response","json","data","catch","error","console","children","sx","display","flexDirection","onChange","options","styles","fileName","_jsxFileName","lineNumber","columnNumber","href","style","textDecoration","color","cursor","Provider","_c","$RefreshReg$"],"sources":["C:/Users/admin/Downloads/Elevator-Task-main/Elevator-Task-main/react_frontend/src/App.js"],"sourcesContent":["import {useEffect, useState} from \"react\";\nimport FloorView from \"./FloorView/FloorView\";\nimport ElevatorInfoDisplay from \"./ElevatorInfoDisplay/ElevatorInfoDisplay\";\nimport Select from \"react-select\";\nimport {Box, Link} from \"@mui/material\";\nimport {ElevatorInfoContext} from \"./Context/ElevatorInfoContext\";\n\nconst selectStyles = {\n    control: (provided) => ({\n        ...provided,\n        width: 300,\n        fontSize: \"2em\",\n        marginLeft: \"30px\",\n        marginTop: \"10px\",\n        textAlign: \"center\",\n    }),\n    singleValue: (provided) => ({...provided, fontSize: \"30px\"}),\n    option: (provided) => ({...provided, fontSize: \"20px\"}),\n    placeholder: (provided) => ({...provided, fontSize: \"30px\"}),\n    menu: (provided) => ({\n        ...provided,\n        width: 300,\n        marginLeft: \"20px\",\n        zIndex: '1000',\n    }),\n};\n\nfunction App() {\n\n    const [elevatorInfo, setElevatorInfo] = useState([]);\n    const [floorOptions, setFloorOptions] = useState([]);\n    const [selectedFloor, setSelectedFloor] = useState(null);\n\n    const handleReceivedFloors = (messageEvent) => {\n        const floors = messageEvent[\"floors\"];\n        setFloorOptions(\n            floors.map((floor) => {\n                return {value: floor.id, label: floor.number};\n            })\n        );\n    };\n\n    const handleElevatorInfo = (messageEvent) => {\n        setElevatorInfo(messageEvent['elevator_info']);\n    };\n\n    useEffect(() => {\n        // First get all floors\n        fetch(\"http://localhost:8000/elevator-control/get-all-floors/\")\n            .then((response) => response.json())\n            .then((data) => handleReceivedFloors(data))\n            .catch((error) => console.error(\"Error:\", error));\n\n        // Then get elevator info\n        fetch(\"http://localhost:8000/elevator-control/get-all-elevator-info/\")\n            .then((response) => response.json())\n            .then((data) => handleElevatorInfo(data))\n            .catch((error) => console.error(\"Error:\", error));\n    }, []); // Only run once\n\n    return (\n        <>\n            <Box sx={{display: \"flex\", flexDirection: \"row\"}}>\n                <Select\n                    placeholder={\"Select a floor\"}\n                    value={selectedFloor}\n                    onChange={setSelectedFloor}\n                    options={floorOptions}\n                    styles={selectStyles}\n                />\n\n                <Box sx={{marginLeft: \"30px\", marginTop: \"25px\"}}>\n                    <Link href=\"http://127.0.0.1:8000/admin\" style={{\n                        textDecoration: \"none\",\n                        fontSize: \"20px\",\n                        color: \"blue\",\n                        cursor: \"pointer\",\n                    }}>\n                        Click here to go to the config page\n                    </Link>\n                </Box>\n\n            </Box>\n\n            <ElevatorInfoDisplay elevatorInfo={elevatorInfo}/>\n\n            <ElevatorInfoContext.Provider value={{setElevatorInfo}}>\n                {selectedFloor ? (\n                    <FloorView selectedFloor={selectedFloor}/>\n                ) : <Box sx={{marginLeft: \"30px\", marginTop: '40px'}}>\n                    Select a floor to view its control panels\n                </Box>}\n            </ElevatorInfoContext.Provider>\n        </>\n\n    );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}